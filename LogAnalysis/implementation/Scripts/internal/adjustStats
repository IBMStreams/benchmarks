#!/bin/bash
# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2014, 2014    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog                      
#
# Extract data from source-stats files generated by the paplication
# so that we are only measuring during the MONITORING_TIME
# period.
# This data will be copied to a sub-directory called 
# adjustedStats.
# The summarize script will use this adjustedStats directory
# to summarize data.

function usage
{
    name=$(basename $0)
    echo "usage: $name <data-dir> <interval-start> <interval_end> <interval-seconds>"
    echo ""
    echo "  - <data-dir> : Directory to store monitoring data eg. memory util."
    echo "  - <interval-start> : Start epoch of the monitoring period"
    echo "  - <interval-end> : End epoch of the monitoring period"
    echo "  - <interval-seconds> : number of seconds in each interval"
    echo ""
}

if [[ $# -ne 4 ]]; then
    usage;
    exit 1;
fi

DATA_DIR=$1
INTERVAL_START=$2
INTERVAL_END=$3
INTERVAL_SECONDS=$4
ADJUSTED_DIR=$DATA_DIR/adjustedStats
INTERVAL_START=$((INTERVAL_START+INTERVAL_SECONDS))
DIR=$(dirname $0)

rm -rf $ADJUSTED_DIR
mkdir -p $ADJUSTED_DIR

source_file_pattern="*source-stats*"

first_common_file_time=`head -n 1 $DATA_DIR/$source_file_pattern | awk '/^Time:/{print $2}' | sort -n | uniq | tail -n 1`
while ((first_common_file_time < INTERVAL_START));do
	first_common_file_time=$((first_common_file_time+INTERVAL_SECONDS))
done
last_common_file_time=`tail -n 1 $DATA_DIR/$source_file_pattern | awk '/^Time:/{print $2}' | sort -n | uniq | head -n 1`
while ((last_common_file_time > INTERVAL_END));do
	last_common_file_time=$((last_common_file_time-INTERVAL_SECONDS))
done
echo $first_common_file_time $last_common_file_time

if ((first_common_file_time > INTERVAL_END)) || ((last_common_file_time < INTERVAL_START)); then
	$DIR/logMsg "No common times in interval [$INTERVAL_START,$INTERVAL_END].  Common times are [$first_common_file_time,$last_common_file_time]"
	exit 1
fi
$DIR/logMsg "Monitoring interval is [$INTERVAL_START,$INTERVAL_END].  Processing interval is [$first_common_file_time,$last_common_file_time]"
for f in  $DATA_DIR/$source_file_pattern; do
	file_name=$(basename $f)
	cat $f | awk 'BEGIN{start='$first_common_file_time';end='$last_common_file_time';increment='$INTERVAL_SECONDS'} /^Time:/{time=$2+0;if((time>=start) && (time<=end)){print $0}}' > $ADJUSTED_DIR/$file_name
done

