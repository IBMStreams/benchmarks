#!/bin/bash
# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2014, 2014    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog                               
#                                                                  
# Licensed Materials - Property of IBM                             
# Copyright IBM Corp. 2011                                         
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  


function usage
{
    name=$(basename $0)
    echo "usage: $name <data-dir> <interval> <num-nodes> <num-cpus>"
    echo ""
    echo "  - <data-dir> : Directory to store monitoring data eg. memory util."
    echo "  - <interval> : Monitoring interval (seconds)."
    echo "  - <num-nodes> : Numbers of nodes."
    echo "  - <num-cpus> : Numbers of cpus."
    echo ""
    echo "Monitor all the hosts at the specified interval using vmstat. Sample usage:"
    echo "    $name ../../Results/P_BAS_1/ 2 4 4"
}

if [[ $# -ne 4 ]]; then
    usage;
    exit 1;
fi

DIR=$(dirname $0)
TOOLS_DIR=$(readlink -f $DIR/../../tools)
DATA_DIR=$1
TEST_INTERVAL=$2
ls -d $DATA_DIR >/dev/null 2>&1
if [ $? -ne 0 ]; then
    mkdir -p $DATA_DIR
fi

NUM_NODES=$3
NUM_CPUS=$4

# Create perf directory if one does not exist
mkdir -p $DATA_DIR

# Remove old monitoring information
rm -fr $DATA_DIR/monitoring.*.$NUM_NODES.$NUM_CPUS 

MON_FILE_TEMPLATE=$DATA_DIR/$NUM_NODES.$NUM_CPUS 
MON_FILE_TEMPLATE=$(readlink -f $MON_FILE_TEMPLATE)
MEM_SCRIPT=$(readlink -f $DIR)/memory
MEM_VARS="TEST_INTERVAL=$TEST_INTERVAL"
CPU_SCRIPT=$(readlink -f $DIR)/cpu

CPU_VARS="TEST_INTERVAL=$TEST_INTERVAL"
# ssh and run
hosts=$(cat $DIR/../hosts | grep analytic | cut -f 1 -d " ")
for host in $hosts; do
    ssh -qx $host $MEM_VARS $MEM_SCRIPT $MON_FILE_TEMPLATE $TEST_INTERVAL &
    ssh -qx $host $CPU_VARS $CPU_SCRIPT $MON_FILE_TEMPLATE $TEST_INTERVAL $NUM_CPUS &
    SERVER_CMD="$TOOLS_DIR/server_stats.pl -C -M -o $DATA_DIR -s $DATA_DIR/server_stop_$host -i $TEST_INTERVAL"
    ssh -qx $host $SERVER_CMD &

    if [ "x$LA_ADDITIONAL_MONITORING_COMMAND" != "x" ]; then
        MONITOR_CMD="$LA_ADDITIONAL_MONITORING_COMMAND $DATA_DIR"
        MONITOR_VARS="LOG_FILE=$LOG_FILE"
	$DIR/logMsg "Running $MONITOR_CMD on $host"
        ssh -qx $host $MONITOR_VARS $MONITOR_CMD &
    fi

done
