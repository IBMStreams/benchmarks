/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.ibm.streamsx.storm.email.benchmark.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Email extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Email\",\"namespace\":\"com.ibm.streamsx.storm.email.benchmark.avro\",\"fields\":[{\"name\":\"ID\",\"type\":\"string\"},{\"name\":\"From\",\"type\":\"string\"},{\"name\":\"Date\",\"type\":\"string\"},{\"name\":\"Subject\",\"type\":[\"string\",\"null\"]},{\"name\":\"ToList\",\"type\":\"string\"},{\"name\":\"CcList\",\"type\":[\"string\",\"null\"]},{\"name\":\"BccList\",\"type\":[\"string\",\"null\"]},{\"name\":\"Body\",\"type\":[\"string\",\"null\"]},{\"name\":\"CharCount\",\"type\":[\"int\",\"null\"]},{\"name\":\"Wordcount\",\"type\":[\"int\",\"null\"]},{\"name\":\"ParaCount\",\"type\":[\"int\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence ID;
  @Deprecated public java.lang.CharSequence From;
  @Deprecated public java.lang.CharSequence Date;
  @Deprecated public java.lang.CharSequence Subject;
  @Deprecated public java.lang.CharSequence ToList;
  @Deprecated public java.lang.CharSequence CcList;
  @Deprecated public java.lang.CharSequence BccList;
  @Deprecated public java.lang.CharSequence Body;
  @Deprecated public java.lang.Integer CharCount;
  @Deprecated public java.lang.Integer Wordcount;
  @Deprecated public java.lang.Integer ParaCount;

  /**
   * Default constructor.
   */
  public Email() {}

  /**
   * All-args constructor.
   */
  public Email(java.lang.CharSequence ID, java.lang.CharSequence From, java.lang.CharSequence Date, java.lang.CharSequence Subject, java.lang.CharSequence ToList, java.lang.CharSequence CcList, java.lang.CharSequence BccList, java.lang.CharSequence Body, java.lang.Integer CharCount, java.lang.Integer Wordcount, java.lang.Integer ParaCount) {
    this.ID = ID;
    this.From = From;
    this.Date = Date;
    this.Subject = Subject;
    this.ToList = ToList;
    this.CcList = CcList;
    this.BccList = BccList;
    this.Body = Body;
    this.CharCount = CharCount;
    this.Wordcount = Wordcount;
    this.ParaCount = ParaCount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return From;
    case 2: return Date;
    case 3: return Subject;
    case 4: return ToList;
    case 5: return CcList;
    case 6: return BccList;
    case 7: return Body;
    case 8: return CharCount;
    case 9: return Wordcount;
    case 10: return ParaCount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.CharSequence)value$; break;
    case 1: From = (java.lang.CharSequence)value$; break;
    case 2: Date = (java.lang.CharSequence)value$; break;
    case 3: Subject = (java.lang.CharSequence)value$; break;
    case 4: ToList = (java.lang.CharSequence)value$; break;
    case 5: CcList = (java.lang.CharSequence)value$; break;
    case 6: BccList = (java.lang.CharSequence)value$; break;
    case 7: Body = (java.lang.CharSequence)value$; break;
    case 8: CharCount = (java.lang.Integer)value$; break;
    case 9: Wordcount = (java.lang.Integer)value$; break;
    case 10: ParaCount = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   */
  public java.lang.CharSequence getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.CharSequence value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'From' field.
   */
  public java.lang.CharSequence getFrom() {
    return From;
  }

  /**
   * Sets the value of the 'From' field.
   * @param value the value to set.
   */
  public void setFrom(java.lang.CharSequence value) {
    this.From = value;
  }

  /**
   * Gets the value of the 'Date' field.
   */
  public java.lang.CharSequence getDate() {
    return Date;
  }

  /**
   * Sets the value of the 'Date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.Date = value;
  }

  /**
   * Gets the value of the 'Subject' field.
   */
  public java.lang.CharSequence getSubject() {
    return Subject;
  }

  /**
   * Sets the value of the 'Subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.CharSequence value) {
    this.Subject = value;
  }

  /**
   * Gets the value of the 'ToList' field.
   */
  public java.lang.CharSequence getToList() {
    return ToList;
  }

  /**
   * Sets the value of the 'ToList' field.
   * @param value the value to set.
   */
  public void setToList(java.lang.CharSequence value) {
    this.ToList = value;
  }

  /**
   * Gets the value of the 'CcList' field.
   */
  public java.lang.CharSequence getCcList() {
    return CcList;
  }

  /**
   * Sets the value of the 'CcList' field.
   * @param value the value to set.
   */
  public void setCcList(java.lang.CharSequence value) {
    this.CcList = value;
  }

  /**
   * Gets the value of the 'BccList' field.
   */
  public java.lang.CharSequence getBccList() {
    return BccList;
  }

  /**
   * Sets the value of the 'BccList' field.
   * @param value the value to set.
   */
  public void setBccList(java.lang.CharSequence value) {
    this.BccList = value;
  }

  /**
   * Gets the value of the 'Body' field.
   */
  public java.lang.CharSequence getBody() {
    return Body;
  }

  /**
   * Sets the value of the 'Body' field.
   * @param value the value to set.
   */
  public void setBody(java.lang.CharSequence value) {
    this.Body = value;
  }

  /**
   * Gets the value of the 'CharCount' field.
   */
  public java.lang.Integer getCharCount() {
    return CharCount;
  }

  /**
   * Sets the value of the 'CharCount' field.
   * @param value the value to set.
   */
  public void setCharCount(java.lang.Integer value) {
    this.CharCount = value;
  }

  /**
   * Gets the value of the 'Wordcount' field.
   */
  public java.lang.Integer getWordcount() {
    return Wordcount;
  }

  /**
   * Sets the value of the 'Wordcount' field.
   * @param value the value to set.
   */
  public void setWordcount(java.lang.Integer value) {
    this.Wordcount = value;
  }

  /**
   * Gets the value of the 'ParaCount' field.
   */
  public java.lang.Integer getParaCount() {
    return ParaCount;
  }

  /**
   * Sets the value of the 'ParaCount' field.
   * @param value the value to set.
   */
  public void setParaCount(java.lang.Integer value) {
    this.ParaCount = value;
  }

  /** Creates a new Email RecordBuilder */
  public static com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder newBuilder() {
    return new com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder();
  }
  
  /** Creates a new Email RecordBuilder by copying an existing Builder */
  public static com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder newBuilder(com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder other) {
    return new com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder(other);
  }
  
  /** Creates a new Email RecordBuilder by copying an existing Email instance */
  public static com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder newBuilder(com.ibm.streamsx.storm.email.benchmark.avro.Email other) {
    return new com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder(other);
  }
  
  /**
   * RecordBuilder for Email instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Email>
    implements org.apache.avro.data.RecordBuilder<Email> {

    private java.lang.CharSequence ID;
    private java.lang.CharSequence From;
    private java.lang.CharSequence Date;
    private java.lang.CharSequence Subject;
    private java.lang.CharSequence ToList;
    private java.lang.CharSequence CcList;
    private java.lang.CharSequence BccList;
    private java.lang.CharSequence Body;
    private java.lang.Integer CharCount;
    private java.lang.Integer Wordcount;
    private java.lang.Integer ParaCount;

    /** Creates a new Builder */
    private Builder() {
      super(com.ibm.streamsx.storm.email.benchmark.avro.Email.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Email instance */
    private Builder(com.ibm.streamsx.storm.email.benchmark.avro.Email other) {
            super(com.ibm.streamsx.storm.email.benchmark.avro.Email.SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.From)) {
        this.From = data().deepCopy(fields()[1].schema(), other.From);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Date)) {
        this.Date = data().deepCopy(fields()[2].schema(), other.Date);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Subject)) {
        this.Subject = data().deepCopy(fields()[3].schema(), other.Subject);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ToList)) {
        this.ToList = data().deepCopy(fields()[4].schema(), other.ToList);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CcList)) {
        this.CcList = data().deepCopy(fields()[5].schema(), other.CcList);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.BccList)) {
        this.BccList = data().deepCopy(fields()[6].schema(), other.BccList);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Body)) {
        this.Body = data().deepCopy(fields()[7].schema(), other.Body);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.CharCount)) {
        this.CharCount = data().deepCopy(fields()[8].schema(), other.CharCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Wordcount)) {
        this.Wordcount = data().deepCopy(fields()[9].schema(), other.Wordcount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ParaCount)) {
        this.ParaCount = data().deepCopy(fields()[10].schema(), other.ParaCount);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'ID' field */
    public java.lang.CharSequence getID() {
      return ID;
    }
    
    /** Sets the value of the 'ID' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ID' field has been set */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ID' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'From' field */
    public java.lang.CharSequence getFrom() {
      return From;
    }
    
    /** Sets the value of the 'From' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setFrom(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.From = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'From' field has been set */
    public boolean hasFrom() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'From' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearFrom() {
      From = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'Date' field */
    public java.lang.CharSequence getDate() {
      return Date;
    }
    
    /** Sets the value of the 'Date' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Date = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'Date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'Date' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearDate() {
      Date = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Subject' field */
    public java.lang.CharSequence getSubject() {
      return Subject;
    }
    
    /** Sets the value of the 'Subject' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setSubject(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Subject = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Subject' field has been set */
    public boolean hasSubject() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Subject' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearSubject() {
      Subject = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ToList' field */
    public java.lang.CharSequence getToList() {
      return ToList;
    }
    
    /** Sets the value of the 'ToList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setToList(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ToList = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ToList' field has been set */
    public boolean hasToList() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ToList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearToList() {
      ToList = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'CcList' field */
    public java.lang.CharSequence getCcList() {
      return CcList;
    }
    
    /** Sets the value of the 'CcList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setCcList(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.CcList = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'CcList' field has been set */
    public boolean hasCcList() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'CcList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearCcList() {
      CcList = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'BccList' field */
    public java.lang.CharSequence getBccList() {
      return BccList;
    }
    
    /** Sets the value of the 'BccList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setBccList(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.BccList = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'BccList' field has been set */
    public boolean hasBccList() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'BccList' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearBccList() {
      BccList = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'Body' field */
    public java.lang.CharSequence getBody() {
      return Body;
    }
    
    /** Sets the value of the 'Body' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setBody(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.Body = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'Body' field has been set */
    public boolean hasBody() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'Body' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearBody() {
      Body = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'CharCount' field */
    public java.lang.Integer getCharCount() {
      return CharCount;
    }
    
    /** Sets the value of the 'CharCount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setCharCount(java.lang.Integer value) {
      validate(fields()[8], value);
      this.CharCount = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'CharCount' field has been set */
    public boolean hasCharCount() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'CharCount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearCharCount() {
      CharCount = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'Wordcount' field */
    public java.lang.Integer getWordcount() {
      return Wordcount;
    }
    
    /** Sets the value of the 'Wordcount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setWordcount(java.lang.Integer value) {
      validate(fields()[9], value);
      this.Wordcount = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'Wordcount' field has been set */
    public boolean hasWordcount() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'Wordcount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearWordcount() {
      Wordcount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'ParaCount' field */
    public java.lang.Integer getParaCount() {
      return ParaCount;
    }
    
    /** Sets the value of the 'ParaCount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder setParaCount(java.lang.Integer value) {
      validate(fields()[10], value);
      this.ParaCount = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'ParaCount' field has been set */
    public boolean hasParaCount() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'ParaCount' field */
    public com.ibm.streamsx.storm.email.benchmark.avro.Email.Builder clearParaCount() {
      ParaCount = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public Email build() {
      try {
        Email record = new Email();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.From = fieldSetFlags()[1] ? this.From : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Date = fieldSetFlags()[2] ? this.Date : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Subject = fieldSetFlags()[3] ? this.Subject : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ToList = fieldSetFlags()[4] ? this.ToList : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.CcList = fieldSetFlags()[5] ? this.CcList : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.BccList = fieldSetFlags()[6] ? this.BccList : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.Body = fieldSetFlags()[7] ? this.Body : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.CharCount = fieldSetFlags()[8] ? this.CharCount : (java.lang.Integer) defaultValue(fields()[8]);
        record.Wordcount = fieldSetFlags()[9] ? this.Wordcount : (java.lang.Integer) defaultValue(fields()[9]);
        record.ParaCount = fieldSetFlags()[10] ? this.ParaCount : (java.lang.Integer) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
